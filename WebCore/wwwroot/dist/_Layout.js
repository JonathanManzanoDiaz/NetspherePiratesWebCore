webpackJsonp([2],{

/***/ 141:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __extends = undefined && undefined.__extends || function () {
    var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (d, b) {
        d.__proto__ = b;
    } || function (d, b) {
        for (var p in b) {
            if (b.hasOwnProperty(p)) d[p] = b[p];
        }
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();
exports.__esModule = true;
var React = __webpack_require__(0);
var ReactBootstrap = __webpack_require__(44);
var Navbar = ReactBootstrap.Navbar;
var Nav = ReactBootstrap.Nav;
var NavItem = ReactBootstrap.NavItem;
var NavDropdown = ReactBootstrap.NavDropdown;
var MenuItem = ReactBootstrap.MenuItem;
var FormGroup = ReactBootstrap.FormGroup;
var FormControl = ReactBootstrap.FormControl;
var Button = ReactBootstrap.Button;
var Navigation = /** @class */function (_super) {
    __extends(Navigation, _super);
    function Navigation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Navigation.prototype.render = function () {
        var Items = this.props.comunnity.map(function (row, index) {
            return React.createElement(MenuItem, { key: index, eventKey: 3 + index / 10.0, href: row.href }, row.text);
        });
        var Login;
        if (this.props.user) {
            Login = React.createElement(Nav, { pullRight: true }, React.createElement(NavDropdown, { eventKey: 5, title: this.props.user, id: "dropdown-basic-info", bsStyle: "info" }, React.createElement(MenuItem, { eventKey: 5.1 }, "Cuenta"), React.createElement(MenuItem, { eventKey: 5.1 }, "Cerrar Session")));
        } else {
            Login = React.createElement(Navbar.Form, { pullRight: true }, React.createElement(FormGroup, null, React.createElement(FormControl, { type: "text", placeholder: "Account" }), React.createElement(FormControl, { type: "password", placeholder: "Password" })), " ", '', React.createElement(Button, { type: "submit", bsStyle: "primary" }, "Login"));
        }
        return React.createElement(Navbar, null, React.createElement(Navbar.Header, null, React.createElement(Navbar.Brand, null, React.createElement("a", { href: "/" }, "Netsphere"))), React.createElement(Nav, null, React.createElement(NavItem, { eventKey: 1, href: "/register" }, "Registrate"), React.createElement(NavItem, { eventKey: 2, href: "/download" }, "Descargar"), React.createElement(NavDropdown, { eventKey: 3, title: "Communidad", id: "basic-nav-dropdown" }, Items), React.createElement(NavItem, { eventKey: 4, href: "/shop" }, "NetsphereCoins")), Login);
    };
    return Navigation;
}(React.Component);
exports["default"] = Navigation;

/***/ }),

/***/ 144:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var ReactDOM = __webpack_require__(11);
var React = __webpack_require__(0);
var Navigation_1 = __webpack_require__(141);
var Community = [{ text: "Guias", href: "#" }, { text: "Foros", href: "#" }, { text: "Videos", href: "#" }, { text: "ScreenShoots", href: "#" }];
ReactDOM.render(React.createElement(Navigation_1["default"], { user: "", comunnity: Community }), document.getElementById('react-navbar'));

/***/ })

},[144]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi9Gcm9udGVuZC9OYXZpZ2F0aW9uLmpzIiwiLi5cXC4uXFwuL0Zyb250ZW5kL19MYXlvdXQudHN4Il0sIm5hbWVzIjpbIl9fZXh0ZW5kcyIsImV4dGVuZFN0YXRpY3MiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwiZCIsImIiLCJwIiwiaGFzT3duUHJvcGVydHkiLCJfXyIsImNvbnN0cnVjdG9yIiwicHJvdG90eXBlIiwiY3JlYXRlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJSZWFjdCIsInJlcXVpcmUiLCJSZWFjdEJvb3RzdHJhcCIsIk5hdmJhciIsIk5hdiIsIk5hdkl0ZW0iLCJOYXZEcm9wZG93biIsIk1lbnVJdGVtIiwiRm9ybUdyb3VwIiwiRm9ybUNvbnRyb2wiLCJCdXR0b24iLCJOYXZpZ2F0aW9uIiwiX3N1cGVyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJyZW5kZXIiLCJJdGVtcyIsInByb3BzIiwiY29tdW5uaXR5IiwibWFwIiwicm93IiwiaW5kZXgiLCJjcmVhdGVFbGVtZW50Iiwia2V5IiwiZXZlbnRLZXkiLCJocmVmIiwidGV4dCIsIkxvZ2luIiwidXNlciIsInB1bGxSaWdodCIsInRpdGxlIiwiaWQiLCJic1N0eWxlIiwiRm9ybSIsInR5cGUiLCJwbGFjZWhvbGRlciIsIkhlYWRlciIsIkJyYW5kIiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQSxJQUFJQSxZQUFhLGFBQVEsVUFBS0EsU0FBZCxJQUE2QixZQUFZO0FBQ3JELFFBQUlDLGdCQUFnQkMsT0FBT0MsY0FBUCxJQUNmLEVBQUVDLFdBQVcsRUFBYixjQUE2QkMsS0FBN0IsSUFBc0MsVUFBVUMsQ0FBVixFQUFhQyxDQUFiLEVBQWdCO0FBQUVELFVBQUVGLFNBQUYsR0FBY0csQ0FBZDtBQUFrQixLQUQzRCxJQUVoQixVQUFVRCxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7QUFBRSxhQUFLLElBQUlDLENB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LFVBQVUsQ0FBWixFQUFlQyxNQUFNLE9BQXJCLEVBQTdCLEVBQTZELGdCQUE3RCxDQUpKLENBSkksRUFTSkUsS0FUSSxDQUFSO0FBVUgsS0E5QkQ7QUErQkEsV0FBT2hCLFVBQVA7QUFDSCxDQXJDK0IsQ0FxQzlCWCxNQUFNc0MsU0FyQ3dCLENBQWhDO0FBc0NBeEMsUUFBUSxTQUFSLElBQXFCYSxVQUFyQixDOzs7Ozs7Ozs7OztBQzVEQSxtQ0FBcUM7QUFDckMsZ0NBQThCO0FBRTlCLHVDQUFzQztBQUV0QyxJQUFhLFlBQUcsQ0FDWixFQUFNLE1BQVMsU0FBTSxNQUFPLE9BQzVCLEVBQU0sTUFBUyxTQUFNLE1BQU8sT0FDNUIsRUFBTSxNQUFVLFVBQU0sTUFBTyxPQUM3QixFQUFNLE1BQWdCLGdCQUFNLE1BQzlCO0FBRU0sU0FBTyxPQUFDLG9CQUFDLGFBQVUsY0FBSyxNQUFHLElBQVUsV0FBZSxjQUNoRCxTQUFlLGVBQ3pCLGlCIiwiZmlsZSI6Il9MYXlvdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcclxuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxuICAgIH07XHJcbn0pKCk7XHJcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XHJcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcclxudmFyIFJlYWN0Qm9vdHN0cmFwID0gcmVxdWlyZShcInJlYWN0LWJvb3RzdHJhcFwiKTtcclxudmFyIE5hdmJhciA9IFJlYWN0Qm9vdHN0cmFwLk5hdmJhcjtcclxudmFyIE5hdiA9IFJlYWN0Qm9vdHN0cmFwLk5hdjtcclxudmFyIE5hdkl0ZW0gPSBSZWFjdEJvb3RzdHJhcC5OYXZJdGVtO1xyXG52YXIgTmF2RHJvcGRvd24gPSBSZWFjdEJvb3RzdHJhcC5OYXZEcm9wZG93bjtcclxudmFyIE1lbnVJdGVtID0gUmVhY3RCb290c3RyYXAuTWVudUl0ZW07XHJcbnZhciBGb3JtR3JvdXAgPSBSZWFjdEJvb3RzdHJhcC5Gb3JtR3JvdXA7XHJcbnZhciBGb3JtQ29udHJvbCA9IFJlYWN0Qm9vdHN0cmFwLkZvcm1Db250cm9sO1xyXG52YXIgQnV0dG9uID0gUmVhY3RCb290c3RyYXAuQnV0dG9uO1xyXG52YXIgTmF2aWdhdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcclxuICAgIF9fZXh0ZW5kcyhOYXZpZ2F0aW9uLCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gTmF2aWdhdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgICB9XHJcbiAgICBOYXZpZ2F0aW9uLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIEl0ZW1zID0gdGhpcy5wcm9wcy5jb211bm5pdHkubWFwKGZ1bmN0aW9uIChyb3csIGluZGV4KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE1lbnVJdGVtLCB7IGtleTogaW5kZXgsIGV2ZW50S2V5OiAzICsgaW5kZXggLyAxMC4wLCBocmVmOiByb3cuaHJlZiB9LCByb3cudGV4dCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdmFyIExvZ2luO1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLnVzZXIpIHtcclxuICAgICAgICAgICAgTG9naW4gPSAoUmVhY3QuY3JlYXRlRWxlbWVudChOYXYsIHsgcHVsbFJpZ2h0OiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KE5hdkRyb3Bkb3duLCB7IGV2ZW50S2V5OiA1LCB0aXRsZTogdGhpcy5wcm9wcy51c2VyLCBpZDogXCJkcm9wZG93bi1iYXNpYy1pbmZvXCIsIGJzU3R5bGU6IFwiaW5mb1wiIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwgeyBldmVudEtleTogNS4xIH0sIFwiQ3VlbnRhXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudUl0ZW0sIHsgZXZlbnRLZXk6IDUuMSB9LCBcIkNlcnJhciBTZXNzaW9uXCIpKSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgTG9naW4gPSAoUmVhY3QuY3JlYXRlRWxlbWVudChOYXZiYXIuRm9ybSwgeyBwdWxsUmlnaHQ6IHRydWUgfSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm9ybUdyb3VwLCBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm9ybUNvbnRyb2wsIHsgdHlwZTogXCJ0ZXh0XCIsIHBsYWNlaG9sZGVyOiBcIkFjY291bnRcIiB9KSxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEZvcm1Db250cm9sLCB7IHR5cGU6IFwicGFzc3dvcmRcIiwgcGxhY2Vob2xkZXI6IFwiUGFzc3dvcmRcIiB9KSksXHJcbiAgICAgICAgICAgICAgICBcIiBcIixcclxuICAgICAgICAgICAgICAgICcnLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHsgdHlwZTogXCJzdWJtaXRcIiwgYnNTdHlsZTogXCJwcmltYXJ5XCIgfSwgXCJMb2dpblwiKSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoTmF2YmFyLCBudWxsLFxyXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KE5hdmJhci5IZWFkZXIsIG51bGwsXHJcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KE5hdmJhci5CcmFuZCwgbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCB7IGhyZWY6IFwiL1wiIH0sIFwiTmV0c3BoZXJlXCIpKSksXHJcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTmF2LCBudWxsLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChOYXZJdGVtLCB7IGV2ZW50S2V5OiAxLCBocmVmOiBcIi9yZWdpc3RlclwiIH0sIFwiUmVnaXN0cmF0ZVwiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTmF2SXRlbSwgeyBldmVudEtleTogMiwgaHJlZjogXCIvZG93bmxvYWRcIiB9LCBcIkRlc2NhcmdhclwiKSxcclxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTmF2RHJvcGRvd24sIHsgZXZlbnRLZXk6IDMsIHRpdGxlOiBcIkNvbW11bmlkYWRcIiwgaWQ6IFwiYmFzaWMtbmF2LWRyb3Bkb3duXCIgfSwgSXRlbXMpLFxyXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChOYXZJdGVtLCB7IGV2ZW50S2V5OiA0LCBocmVmOiBcIi9zaG9wXCIgfSwgXCJOZXRzcGhlcmVDb2luc1wiKSksXHJcbiAgICAgICAgICAgIExvZ2luKSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE5hdmlnYXRpb247XHJcbn0oUmVhY3QuQ29tcG9uZW50KSk7XHJcbmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gTmF2aWdhdGlvbjtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vRnJvbnRlbmQvTmF2aWdhdGlvbi5qcyIsImltcG9ydCAqIGFzIFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSdcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnXHJcblxyXG5pbXBvcnQgTmF2aWdhdGlvbiBmcm9tICcuL05hdmlnYXRpb24nO1xyXG5cclxudmFyIENvbW11bml0eSA9IFtcclxuICAgIHsgdGV4dDogXCJHdWlhc1wiLCBocmVmOiBcIiNcIiB9LFxyXG4gICAgeyB0ZXh0OiBcIkZvcm9zXCIsIGhyZWY6IFwiI1wiIH0sXHJcbiAgICB7IHRleHQ6IFwiVmlkZW9zXCIsIGhyZWY6IFwiI1wiIH0sXHJcbiAgICB7IHRleHQ6IFwiU2NyZWVuU2hvb3RzXCIsIGhyZWY6IFwiI1wiIH0sXHJcbl07XHJcblxyXG5SZWFjdERPTS5yZW5kZXIoPE5hdmlnYXRpb24gdXNlcj1cIlwiIGNvbXVubml0eT17Q29tbXVuaXR5fSAvPixcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZWFjdC1uYXZiYXInKVxyXG4pO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL0Zyb250ZW5kL19MYXlvdXQudHN4Il0sInNvdXJjZVJvb3QiOiIifQ==